name: Build Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - self-host

jobs:
  # run-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install dependencies
  #       run: npm ci && npx playwright install --with-deps
  #     - name: Start the development server
  #       env:
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #         JWT_SECRET: ${{ secrets.JWT_SECRET }}
  #         NEXT_PUBLIC_APP_URL: http://localhost:8080
  #         API_URL: http://localhost:3333
  #         LUNARY_PUBLIC_KEY: 259d2d94-9446-478a-ae04-484de705b522
  #         OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  #       run: npm run dev:test & npx wait-on http://localhost:3333/v1/health

  #     - name: Run tests
  #       run: npx playwright test
  #       env:
  #         BASE_URL: http://localhost:8080
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}

  build-and-push:
    # needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Generate data
        id: date
        run: echo "::set-output name=date::$(date +%Y-%m-%d-%Hh%Mm%Ss)"

      - name: Get short commit hash
        id: commit
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push lunary-ee
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/Dockerfile
          push: true
          tags: |
            ${{ github.actor }}/llmonitor:latest
            ${{ github.actor }}/llmonitor:rev-${{ steps.date.outputs.date }}-${{ steps.commit.outputs.hash }}
          platforms: linux/amd64

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to Production
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.PRODUCTION_IP_ADDRESS }}
  #         username: root
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: 3855
  #         script: |
  #           cd /opt/lunary
  #           docker compose pull
  #           docker compose down
  #           docker compose up -d
